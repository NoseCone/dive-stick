// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";
import * as Comps$RescriptReactIntro from "./Comps.bs.js";
import * as CompTabs$RescriptReactIntro from "./CompTabs.bs.js";
import * as CompHeader$RescriptReactIntro from "./CompHeader.bs.js";

import './site.css';
;

function App(Props) {
  var url = RescriptReactRouter.useUrl(undefined, undefined);
  var match = React.useState(function () {
        return "";
      });
  var setCompUrl = match[1];
  React.useEffect((function () {
          var match = url.path;
          if (!match) {
            return ;
          }
          if (match.hd !== "comp-prefix") {
            return ;
          }
          var match$1 = match.tl;
          if (!match$1) {
            return ;
          }
          if (match$1.tl) {
            return ;
          }
          var compUrl$p = "http://" + match$1.hd + ".flaretiming.com/json";
          Curry._1(setCompUrl, (function (param) {
                  return compUrl$p;
                }));
          var data = compUrl$p + "/comp-input/comps.json";
          console.log("JSON", data);
          var __x = fetch(data);
          var __x$1 = __x.then(function (prim) {
                return prim.json();
              });
          __x$1.then(function (obj) {
                return Promise.resolve((console.log("COMP", obj), undefined));
              });
          RescriptReactRouter.push("/comp");
          
        }), [
        url,
        setCompUrl
      ]);
  var match$1 = url.path;
  var component;
  var exit = 0;
  if (match$1) {
    switch (match$1.hd) {
      case "comp" :
          if (match$1.tl) {
            exit = 1;
          } else {
            component = React.createElement("div", undefined, React.createElement(CompHeader$RescriptReactIntro.make, {}), "Tasks", React.createElement(CompTabs$RescriptReactIntro.make, {}));
          }
          break;
      case "comp-prefix" :
          var match$2 = match$1.tl;
          if (match$2 && !match$2.tl) {
            component = React.createElement("div", undefined);
          } else {
            exit = 1;
          }
          break;
      case "pilots" :
          if (match$1.tl) {
            exit = 1;
          } else {
            component = React.createElement("div", undefined, React.createElement(CompHeader$RescriptReactIntro.make, {}), "Pilots", React.createElement(CompTabs$RescriptReactIntro.make, {}));
          }
          break;
      case "settings" :
          if (match$1.tl) {
            exit = 1;
          } else {
            component = React.createElement("div", undefined, React.createElement(CompHeader$RescriptReactIntro.make, {}), "Settings", React.createElement(CompTabs$RescriptReactIntro.make, {}));
          }
          break;
      default:
        exit = 1;
    }
  } else {
    component = React.createElement(Comps$RescriptReactIntro.make, {});
  }
  if (exit === 1) {
    component = React.createElement("div", undefined, "Route not found");
  }
  return React.createElement("div", undefined, component, "comp url: " + match[0]);
}

var make = App;

export {
  make ,
  
}
/*  Not a pure module */
