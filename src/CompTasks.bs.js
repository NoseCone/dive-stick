// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function mkBool(s, x) {
  if (x) {
    return s;
  } else {
    return "";
  }
}

function mkTaskRows(tasks, taskLengths) {
  return Belt_Array.zipBy(tasks, taskLengths, (function (param, d) {
                return {
                        taskName: param.taskName,
                        tps: Belt_Array.map(param.zones.raw, (function (z) {
                                  return z.zoneName;
                                })).join("-"),
                        distance: d,
                        stopped: Belt_Option.isSome(param.stopped) ? true : false,
                        cancelled: Belt_Option.getWithDefault(param.cancelled, false)
                      };
              }));
}

function s(prim) {
  return prim;
}

function CompTasks$TaskRow(Props) {
  var row = Props.row;
  return React.createElement("tr", undefined, React.createElement("td", undefined, "1"), React.createElement("td", {
                  className: "td-task-name"
                }, row.taskName), React.createElement("td", {
                  className: "td-task-tps"
                }, row.tps), React.createElement("td", {
                  className: "td-task-dist"
                }, row.distance), React.createElement("td", {
                  className: "td-task-stopped"
                }, row.stopped ? "STOPPED" : ""), React.createElement("td", {
                  className: "td-task-cancelled"
                }, row.cancelled ? "CANCELLED" : ""));
}

var TaskRow = {
  make: CompTasks$TaskRow
};

function CompTasks(Props) {
  var tasks = Props.tasks;
  var taskLengths = Props.taskLengths;
  var xs = Belt_Array.mapWithIndex(mkTaskRows(tasks, taskLengths), (function (i, row) {
          return React.createElement(CompTasks$TaskRow, {
                      row: row,
                      key: String(i)
                    });
        }));
  return React.createElement(React.Fragment, undefined, React.createElement("table", {
                  className: "table is-striped"
                }, React.createElement("thead", undefined, React.createElement("tr", undefined, React.createElement("th", undefined, "#"), React.createElement("th", {
                              className: "th-task-name"
                            }, "Name"), React.createElement("th", {
                              className: "th-task-tps"
                            }, "Turnpoints"), React.createElement("th", {
                              className: "th-task-dist"
                            }, "Distance"), React.createElement("th", {
                              className: "th-task-stopped"
                            }, "Stopped"), React.createElement("th", {
                              className: "th-task-cancelled"
                            }, "Cancelled"))), React.createElement("tbody", undefined, xs)));
}

var make = CompTasks;

export {
  mkBool ,
  mkTaskRows ,
  s ,
  TaskRow ,
  make ,
  
}
/* react Not a pure module */
